{"ast":null,"code":"var _jsxFileName = \"/home/anjuman/Desktop/apiSecurityEngine/apisecurityengine-frontend/src/components/tables/dataTable.jsx\";\nimport React, { Fragment, useState, useCallback, useMemo } from 'react';\nimport Breadcrumb from '../../layout/breadcrumb';\nimport differenceBy from 'lodash/differenceBy';\nimport { toast } from 'react-toastify';\nimport DataTable from 'react-data-table-component';\nimport { tableData } from '../../data/dummyTableData';\nimport { Container, Row, Col, Card, CardHeader, CardBody } from 'reactstrap';\nconst DataTables = () => {\n  const [data, setData] = useState(tableData);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [toggleCleared, setToggleCleared] = useState(false);\n  const tableColumns = [{\n    name: 'ID',\n    selector: 'id',\n    sortable: true,\n    center: true\n  }, {\n    name: 'Name',\n    selector: 'name',\n    sortable: true,\n    center: true\n  }, {\n    name: 'Status',\n    selector: 'status',\n    sortable: true,\n    center: true\n  }, {\n    name: 'Creat_on',\n    selector: 'creat_on',\n    sortable: true,\n    center: true\n  }];\n  const handleRowSelected = useCallback(state => {\n    setSelectedRows(state.selectedRows);\n  }, []);\n  const contextActions = useMemo(() => {\n    const handleDelete = () => {\n      if (window.confirm(`Are you sure you want to delete:\\r ${selectedRows.map(r => r.name)}?`)) {\n        setToggleCleared(!toggleCleared);\n        setData(differenceBy(data, selectedRows, 'name'));\n        toast.success(\"Successfully Deleted !\");\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: \"delete\",\n      className: \"btn btn-danger\",\n      onClick: handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }\n    }, \"Delete\");\n  }, [data, selectedRows, toggleCleared]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"Table\",\n    title: \"Data Tables\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, \"Select Multiple and Delete Single Data\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    data: data,\n    columns: tableColumns,\n    striped: true,\n    center: true,\n    selectableRows: true,\n    persistTableHead: true,\n    contextActions: contextActions,\n    onSelectedRowsChange: handleRowSelected,\n    clearSelectedRows: toggleCleared,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 31\n    }\n  })))))));\n};\nexport default DataTables;","map":{"version":3,"names":["React","Fragment","useState","useCallback","useMemo","Breadcrumb","differenceBy","toast","DataTable","tableData","Container","Row","Col","Card","CardHeader","CardBody","DataTables","data","setData","selectedRows","setSelectedRows","toggleCleared","setToggleCleared","tableColumns","name","selector","sortable","center","handleRowSelected","state","contextActions","handleDelete","window","confirm","map","r","success","createElement","key","className","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","parent","title","fluid","sm","columns","striped","selectableRows","persistTableHead","onSelectedRowsChange","clearSelectedRows"],"sources":["/home/anjuman/Desktop/apiSecurityEngine/apisecurityengine-frontend/src/components/tables/dataTable.jsx"],"sourcesContent":["import React, { Fragment,useState,useCallback,useMemo} from 'react';\nimport Breadcrumb from '../../layout/breadcrumb'\nimport differenceBy from 'lodash/differenceBy';\nimport { toast } from 'react-toastify';\nimport DataTable from 'react-data-table-component'\nimport {tableData} from '../../data/dummyTableData'\nimport { Container,Row,Col,Card,CardHeader,CardBody} from 'reactstrap';\n\nconst DataTables = () =>  {\n\n  const [data,setData] = useState(tableData)\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [toggleCleared, setToggleCleared] = useState(false);\n\n  const tableColumns = [\n    {\n        name: 'ID',\n        selector: 'id', \n        sortable: true,\n        center:true,\n    },\n    {\n        name: 'Name',\n        selector: 'name',\n        sortable: true,\n        center:true,\n    },\n    {\n        name: 'Status',\n        selector: 'status',\n        sortable: true,\n        center:true,\n    },\n    {\n        name: 'Creat_on',\n        selector: 'creat_on',\n        sortable: true,\n        center:true,\n    },\n  ]\n\n  \n  const handleRowSelected = useCallback(state => {\n      setSelectedRows(state.selectedRows);\n    }, []);\n\n    const contextActions = useMemo(() => {\n      const handleDelete = () => {\n        \n        if (window.confirm(`Are you sure you want to delete:\\r ${selectedRows.map(r => r.name)}?`)) {\n          setToggleCleared(!toggleCleared);\n          setData(differenceBy(data, selectedRows, 'name'));\n          toast.success(\"Successfully Deleted !\")\n        }\n      };\n  \n      return <button key=\"delete\" className=\"btn btn-danger\" onClick={handleDelete}>Delete</button>;\n    }, [data, selectedRows, toggleCleared]);\n\n    return (\n        <Fragment>\n        <Breadcrumb parent=\"Table\" title=\"Data Tables\"/>\n        <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <h5>{\"Select Multiple and Delete Single Data\"}</h5>\n                            </CardHeader>\n                            <CardBody>\n                              <DataTable\n                                data={data}\n                                columns={tableColumns}\n                                striped={true}\n                                center={true}\n                                selectableRows\n                                persistTableHead\n                                contextActions={contextActions}\n                                onSelectedRowsChange={handleRowSelected}\n                                clearSelectedRows={toggleCleared}\n                              />\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n\n};\n\nexport default DataTables;"],"mappings":"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"},"metadata":{},"sourceType":"module"}