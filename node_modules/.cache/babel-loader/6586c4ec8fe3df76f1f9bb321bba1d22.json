{"ast":null,"code":"import{Jwt_token}from'../data/config';export var configureFakeBackend=function configureFakeBackend(){var users=[{email:'test@gmail.com',password:'test123'}];var realFetch=window.fetch;window.fetch=function(url,opts){var isLoggedIn=opts.headers['Authorization']===\"Bearer \".concat(Jwt_token);return new Promise(function(resolve,reject){// wrap in timeout to simulate server api call\nsetTimeout(function(){// authenticate - public\nif(url.endsWith('/users/authenticate')&&opts.method==='POST'){var params=opts.body;var user=users.find(function(x){return x.email===params.email&&x.password===params.password;});if(!user)return error('Username or password is incorrect');return ok(Jwt_token);}// get users - secure\nif(url.endsWith('/users')&&opts.method==='GET'){if(!isLoggedIn)return unauthorised();return ok(users);}// pass through any requests not handled above\nrealFetch(url,opts).then(function(response){return resolve(response);});// private helper functions\nfunction ok(body){resolve({ok:true,text:function text(){return Promise.resolve(JSON.stringify(body));}});}function unauthorised(){resolve({status:401,text:function text(){return Promise.resolve(JSON.stringify({message:'Unauthorised'}));}});}function error(message){resolve({status:400,text:function text(){return Promise.resolve(JSON.stringify({message:message}));}});}},500);});};};export function handleResponse(response){return response.text().then(function(text){var data=text&&JSON.parse(text);if(!response.ok){if([401,403].indexOf(response.status)!==-1){// auto logout if 401 Unauthorized or 403 Forbidden response returned from api\nlocalStorage.removeItem('token');localStorage.removeItem('profileURL');}}return data;});}export function authHeader(){// return authorization header with jwt token\nvar currentUser=localStorage.getItem('token');if(currentUser){return{Authorization:\"Bearer \".concat(currentUser)};}else{return{};}}","map":{"version":3,"names":["Jwt_token","configureFakeBackend","users","email","password","realFetch","window","fetch","url","opts","isLoggedIn","headers","concat","Promise","resolve","reject","setTimeout","endsWith","method","params","body","user","find","x","error","ok","unauthorised","then","response","text","JSON","stringify","status","message","handleResponse","data","parse","indexOf","localStorage","removeItem","authHeader","currentUser","getItem","Authorization"],"sources":["/home/anjuman/Desktop/apiSecurityEngine/apisecurityengine-frontend/src/services/fack.backend.jsx"],"sourcesContent":["import {Jwt_token} from '../data/config'\nexport const configureFakeBackend = () => {\n    let users = [{ email: 'test@gmail.com', password: 'test123'}];\n    let realFetch = window.fetch;\n    window.fetch = function (url, opts) {\n        const isLoggedIn = opts.headers['Authorization'] === `Bearer ${Jwt_token}`;\n        return new Promise((resolve, reject) => {\n            // wrap in timeout to simulate server api call\n            setTimeout(() => {\n                // authenticate - public\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\n                    const params = opts.body;\n                    const user = users.find(x => x.email === params.email && x.password === params.password);\n                    if (!user) return error('Username or password is incorrect');\n                    return ok(Jwt_token);\n                }\n\n                // get users - secure\n                if (url.endsWith('/users') && opts.method === 'GET') {\n                    if (!isLoggedIn) return unauthorised();\n                    return ok(users);\n                }\n\n                // pass through any requests not handled above\n                realFetch(url, opts).then(response => resolve(response));\n\n                // private helper functions\n\n                function ok(body) {\n                    resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(body)) })\n                }\n\n                function unauthorised() {\n                    resolve({ status: 401, text: () => Promise.resolve(JSON.stringify({ message: 'Unauthorised' })) })\n                }\n\n                function error(message) {\n                    \n                    resolve({ status: 400, text: () => Promise.resolve(JSON.stringify({ message })) })\n                }\n            }, 500);\n        });\n    }\n}\n\nexport function handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if ([401, 403].indexOf(response.status) !== -1) {\n                // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n                localStorage.removeItem('token')\n                localStorage.removeItem('profileURL')\n            }\n        }\n        return data;\n    }); \n}\n\nexport function authHeader() {\n    // return authorization header with jwt token\n    const currentUser = localStorage.getItem('token')\n    if (currentUser) {\n        return { Authorization: `Bearer ${currentUser}` };\n    }else {\n        return {};\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}