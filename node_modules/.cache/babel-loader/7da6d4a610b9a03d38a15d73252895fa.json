{"ast":null,"code":"import { GET_MEMBERS, GET_MEMBERS_SUCCESS, GET_CHATS, GET_CHATS_SUCCESS, CHANGE_CHAT, CREATE_CHAT, UPDATE_SELECTED_USER, SEARCH_MEMBER, SEND_MESSAGE, REPLY_BY_SELECTED_USER } from '../actionTypes';\nconst initial_state = {\n  allMembers: null,\n  members: null,\n  chats: null,\n  loading: false,\n  currentUser: null,\n  selectedUser: null\n};\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial_state;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_MEMBERS:\n      return {\n        ...state,\n        loading: true\n      };\n    case GET_MEMBERS_SUCCESS:\n      const members = action.payload;\n      const currentUser = members.chats[0];\n      return {\n        ...state,\n        loading: false,\n        allMembers: members,\n        members: members.chats,\n        currentUser: currentUser\n      };\n    case GET_CHATS:\n      return {\n        ...state,\n        chats: action.payload.chats,\n        loading: true\n      };\n    case GET_CHATS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        chats: action.payload.chats,\n        selectedUser: state.allMembers.chats.find(x => x.id === action.payload.selectedUser)\n      };\n    case CHANGE_CHAT:\n      return {\n        ...state,\n        selectedUser: state.allMembers.chats.find(x => x.id === action.payload)\n      };\n    case CREATE_CHAT:\n      return {\n        ...state\n      };\n    case SEARCH_MEMBER:\n      if (action.payload === '') {\n        return {\n          ...state,\n          members: state.allMembers.chats\n        };\n      } else {\n        const keyword = action.payload.toLowerCase();\n        const searchedMembers = state.allMembers.chats.filter(member => member.name.toLowerCase().indexOf(keyword) > -1);\n        return {\n          ...state,\n          members: searchedMembers\n        };\n      }\n    case SEND_MESSAGE:\n      return {\n        ...state\n      };\n    case REPLY_BY_SELECTED_USER:\n      return {\n        ...state\n      };\n    case UPDATE_SELECTED_USER:\n      return {\n        ...state,\n        updateSelectedUser: state.allMembers.chats.find(x => x.id === action.payload.selectedUser)\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n});","map":{"version":3,"names":["GET_MEMBERS","GET_MEMBERS_SUCCESS","GET_CHATS","GET_CHATS_SUCCESS","CHANGE_CHAT","CREATE_CHAT","UPDATE_SELECTED_USER","SEARCH_MEMBER","SEND_MESSAGE","REPLY_BY_SELECTED_USER","initial_state","allMembers","members","chats","loading","currentUser","selectedUser","state","arguments","length","undefined","action","type","payload","find","x","id","keyword","toLowerCase","searchedMembers","filter","member","name","indexOf","updateSelectedUser"],"sources":["/home/anjuman/Desktop/apiSecurityEngine/apisecurityengine-frontend/src/redux/chap-app/reducer.jsx"],"sourcesContent":["import {\n    GET_MEMBERS,\n    GET_MEMBERS_SUCCESS,\n    GET_CHATS,\n    GET_CHATS_SUCCESS,\n    CHANGE_CHAT,\n    CREATE_CHAT,\n    UPDATE_SELECTED_USER,\n    SEARCH_MEMBER,\n    SEND_MESSAGE,\n    REPLY_BY_SELECTED_USER\n\n} from '../actionTypes';\n\n\nconst initial_state = {\n    allMembers: null,\n    members: null,\n    chats: null,\n    loading: false,\n    currentUser: null,\n    selectedUser: null,\n};\nexport default (state = initial_state, action) => {\n    switch (action.type) {\n\n        case GET_MEMBERS:\n            return { ...state, loading: true };\n\n        case GET_MEMBERS_SUCCESS:\n            const members = action.payload;\n            const currentUser = members.chats[0]\n            return { ...state, loading: false, allMembers: members, members: members.chats, currentUser: currentUser };\n\n        case GET_CHATS:\n            return { ...state,chats:action.payload.chats, loading: true };\n\n        case GET_CHATS_SUCCESS:\n            return { ...state, loading: false, chats: action.payload.chats, selectedUser: state.allMembers.chats.find(x => x.id === action.payload.selectedUser) };\n\n        case CHANGE_CHAT:\n            return { ...state, selectedUser: state.allMembers.chats.find(x => x.id === action.payload) };\n\n        case CREATE_CHAT:\n            return { ...state };\n\n\n        case SEARCH_MEMBER:\n            if (action.payload === '') {\n                return { ...state, members: state.allMembers.chats };\n            } else {\n                const keyword = action.payload.toLowerCase();\n                const searchedMembers = state.allMembers.chats.filter((member) =>  member.name.toLowerCase().indexOf(keyword) > -1);\n                return { ...state, members: searchedMembers }\n            }\n\n        case SEND_MESSAGE:\n            return { ...state };\n\n        case REPLY_BY_SELECTED_USER:\n            return { ...state };\n    \n        case UPDATE_SELECTED_USER:\n            return { ...state, updateSelectedUser: state.allMembers.chats.find(x => x.id === action.payload.selectedUser) }\n\n        default: return { ...state };\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}