{"ast":null,"code":"/**\n * marked v4.3.0 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.marked = {}));\n})(this, function (exports) {\n  'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n  }\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n  function _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n    return _extends.apply(this, arguments);\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  function _toPrimitive(input, hint) {\n    if (typeof input !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n      var res = prim.call(input, hint || \"default\");\n      if (typeof res !== \"object\") return res;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n  }\n  function _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return typeof key === \"symbol\" ? key : String(key);\n  }\n  function getDefaults() {\n    return {\n      async: false,\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      hooks: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n  exports.defaults = getDefaults();\n  function changeDefaults(newDefaults) {\n    exports.defaults = newDefaults;\n  }\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = new RegExp(escapeTest.source, 'g');\n  var escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\n  var escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n    return html;\n  }\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  /**\n   * @param {string} html\n   */\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n      return '';\n    });\n  }\n  var caret = /(^|[^\\[])\\^/g;\n\n  /**\n   * @param {string | RegExp} regex\n   * @param {string} opt\n   */\n  function edit(regex, opt) {\n    regex = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  /**\n   * @param {boolean} sanitize\n   * @param {string} base\n   * @param {string} href\n   */\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n    return href;\n  }\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  /**\n   * @param {string} base\n   * @param {string} href\n   */\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n          curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') {\n          escaped = !escaped;\n        }\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/);\n    var i = 0;\n\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n      cells.shift();\n    }\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n      cells.pop();\n    }\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n    return cells;\n  }\n\n  /**\n   * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n   * /c*$/ is vulnerable to REDOS.\n   *\n   * @param {string} str\n   * @param {string} c\n   * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n   */\n  function rtrim(str, c, invert) {\n    var l = str.length;\n    if (l === 0) {\n      return '';\n    }\n\n    // Length of suffix matching the invert condition.\n    var suffLen = 0;\n\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n    return str.slice(0, l - suffLen);\n  }\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n    var l = str.length;\n    var level = 0,\n      i = 0;\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n    return -1;\n  }\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  }\n\n  // copied from https://stackoverflow.com/a/5450113/806777\n  /**\n   * @param {string} pattern\n   * @param {number} count\n   */\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n    var result = '';\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n      count >>= 1;\n      pattern += pattern;\n    }\n    return result + pattern;\n  }\n  function outputLink(cap, link, raw, lexer) {\n    var href = link.href;\n    var title = link.title ? escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n    if (cap[0].charAt(0) !== '!') {\n      lexer.state.inLink = true;\n      var token = {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text,\n        tokens: lexer.inlineTokens(text)\n      };\n      lexer.state.inLink = false;\n      return token;\n    }\n    return {\n      type: 'image',\n      raw: raw,\n      href: href,\n      title: title,\n      text: escape(text)\n    };\n  }\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n    if (matchIndentToCode === null) {\n      return text;\n    }\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n      var indentInNode = matchIndentInNode[0];\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n      return node;\n    }).join('\\n');\n  }\n\n  /**\n   * Tokenizer\n   */\n  var Tokenizer = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || exports.defaults;\n    }\n    var _proto = Tokenizer.prototype;\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n      if (cap && cap[0].length > 0) {\n        return {\n          type: 'space',\n          raw: cap[0]\n        };\n      }\n    };\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n          text: text\n        };\n      }\n    };\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n      if (cap) {\n        var text = cap[2].trim();\n\n        // remove trailing #s\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text,\n          tokens: this.lexer.inline(text)\n        };\n      }\n    };\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n      if (cap) {\n        var text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n        var top = this.lexer.state.top;\n        this.lexer.state.top = true;\n        var tokens = this.lexer.blockTokens(text);\n        this.lexer.state.top = top;\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          tokens: tokens,\n          text: text\n        };\n      }\n    };\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n      if (cap) {\n        var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;\n        var bull = cap[1].trim();\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: '',\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        };\n        bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n        if (this.options.pedantic) {\n          bull = isordered ? bull : '[*+-]';\n        }\n\n        // Get next list item\n        var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))\");\n\n        // Check if current bullet point can start a new List Item\n        while (src) {\n          endEarly = false;\n          if (!(cap = itemRegex.exec(src))) {\n            break;\n          }\n          if (this.rules.block.hr.test(src)) {\n            // End list if bullet was actually HR (possibly move into itemRegex?)\n            break;\n          }\n          raw = cap[0];\n          src = src.substring(raw.length);\n          line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, function (t) {\n            return ' '.repeat(3 * t.length);\n          });\n          nextLine = src.split('\\n', 1)[0];\n          if (this.options.pedantic) {\n            indent = 2;\n            itemContents = line.trimLeft();\n          } else {\n            indent = cap[2].search(/[^ ]/); // Find first non-space char\n            indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n            itemContents = line.slice(indent);\n            indent += cap[1].length;\n          }\n          blankLine = false;\n          if (!line && /^ *$/.test(nextLine)) {\n            // Items begin with at most one blank line\n            raw += nextLine + '\\n';\n            src = src.substring(nextLine.length + 1);\n            endEarly = true;\n          }\n          if (!endEarly) {\n            var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))\");\n            var hrRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)\");\n            var fencesBeginRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:```|~~~)\");\n            var headingBeginRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}#\");\n\n            // Check if following lines should be included in List Item\n            while (src) {\n              rawLine = src.split('\\n', 1)[0];\n              nextLine = rawLine;\n\n              // Re-align to follow commonmark nesting rules\n              if (this.options.pedantic) {\n                nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n              }\n\n              // End list item if found code fences\n              if (fencesBeginRegex.test(nextLine)) {\n                break;\n              }\n\n              // End list item if found start of new heading\n              if (headingBeginRegex.test(nextLine)) {\n                break;\n              }\n\n              // End list item if found start of new bullet\n              if (nextBulletRegex.test(nextLine)) {\n                break;\n              }\n\n              // Horizontal rule found\n              if (hrRegex.test(src)) {\n                break;\n              }\n              if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) {\n                // Dedent if possible\n                itemContents += '\\n' + nextLine.slice(indent);\n              } else {\n                // not enough indentation\n                if (blankLine) {\n                  break;\n                }\n\n                // paragraph continuation unless last line was a different block level element\n                if (line.search(/[^ ]/) >= 4) {\n                  // indented code block\n                  break;\n                }\n                if (fencesBeginRegex.test(line)) {\n                  break;\n                }\n                if (headingBeginRegex.test(line)) {\n                  break;\n                }\n                if (hrRegex.test(line)) {\n                  break;\n                }\n                itemContents += '\\n' + nextLine;\n              }\n              if (!blankLine && !nextLine.trim()) {\n                // Check if current line is blank\n                blankLine = true;\n              }\n              raw += rawLine + '\\n';\n              src = src.substring(rawLine.length + 1);\n              line = nextLine.slice(indent);\n            }\n          }\n          if (!list.loose) {\n            // If the previous item ended with a blank line, the list is loose\n            if (endsWithBlankLine) {\n              list.loose = true;\n            } else if (/\\n *\\n *$/.test(raw)) {\n              endsWithBlankLine = true;\n            }\n          }\n\n          // Check for task list items\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.exec(itemContents);\n            if (istask) {\n              ischecked = istask[0] !== '[ ] ';\n              itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: !!istask,\n            checked: ischecked,\n            loose: false,\n            text: itemContents\n          });\n          list.raw += raw;\n        }\n\n        // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n        list.items[list.items.length - 1].raw = raw.trimRight();\n        list.items[list.items.length - 1].text = itemContents.trimRight();\n        list.raw = list.raw.trimRight();\n        var l = list.items.length;\n\n        // Item child tokens handled here at end because we needed to have the final item to trim it first\n        for (i = 0; i < l; i++) {\n          this.lexer.state.top = false;\n          list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n          if (!list.loose) {\n            // Check if list should be loose\n            var spacers = list.items[i].tokens.filter(function (t) {\n              return t.type === 'space';\n            });\n            var hasMultipleLineBreaks = spacers.length > 0 && spacers.some(function (t) {\n              return /\\n.*\\n/.test(t.raw);\n            });\n            list.loose = hasMultipleLineBreaks;\n          }\n        }\n\n        // Set all items to loose if list is loose\n        if (list.loose) {\n          for (i = 0; i < l; i++) {\n            list.items[i].loose = true;\n          }\n        }\n        return list;\n      }\n    };\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n      if (cap) {\n        var token = {\n          type: 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        };\n        if (this.options.sanitize) {\n          var text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n          token.type = 'paragraph';\n          token.text = text;\n          token.tokens = this.lexer.inline(text);\n        }\n        return token;\n      }\n    };\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n      if (cap) {\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        var href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n        var title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: href,\n          title: title\n        };\n      }\n    };\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1]).map(function (c) {\n            return {\n              text: c\n            };\n          }),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n        };\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i, j, k, row;\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n          l = item.rows.length;\n          for (i = 0; i < l; i++) {\n            item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n              return {\n                text: c\n              };\n            });\n          }\n\n          // parse child tokens inside headers and cells\n\n          // header child tokens\n          l = item.header.length;\n          for (j = 0; j < l; j++) {\n            item.header[j].tokens = this.lexer.inline(item.header[j].text);\n          }\n\n          // cell child tokens\n          l = item.rows.length;\n          for (j = 0; j < l; j++) {\n            row = item.rows[j];\n            for (k = 0; k < row.length; k++) {\n              row[k].tokens = this.lexer.inline(row[k].text);\n            }\n          }\n          return item;\n        }\n      }\n    };\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1],\n          tokens: this.lexer.inline(cap[1])\n        };\n      }\n    };\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n      if (cap) {\n        var text = cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1];\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: text,\n          tokens: this.lexer.inline(text)\n        };\n      }\n    };\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n      if (cap) {\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0],\n          tokens: this.lexer.inline(cap[0])\n        };\n      }\n    };\n    _proto.escape = function escape$1(src) {\n      var cap = this.rules.inline.escape.exec(src);\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: escape(cap[1])\n        };\n      }\n    };\n    _proto.tag = function tag(src) {\n      var cap = this.rules.inline.tag.exec(src);\n      if (cap) {\n        if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n          this.lexer.state.inLink = true;\n        } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.lexer.state.inLink = false;\n        }\n        if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = true;\n        } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = false;\n        }\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: this.lexer.state.inLink,\n          inRawBlock: this.lexer.state.inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n        };\n      }\n    };\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          }\n\n          // ending angle bracket cannot be escaped\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n        var href = cap[2];\n        var title = '';\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n        href = href.trim();\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0], this.lexer);\n      }\n    };\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n        if (!link) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n        return outputLink(cap, link, cap[0], this.lexer);\n      }\n    };\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return;\n\n      // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDF70-\\uDF81\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n          rLength,\n          delimTotal = lLength,\n          midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0;\n\n        // Clip maskedSrc to same section of string as src (move to lexer?)\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n          // Remove extra characters. *a*** -> *a*\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n          var raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n          // Create `em` if smallest delimiter has odd char count. *a***\n          if (Math.min(lLength, rLength) % 2) {\n            var _text = raw.slice(1, -1);\n            return {\n              type: 'em',\n              raw: raw,\n              text: _text,\n              tokens: this.lexer.inlineTokens(_text)\n            };\n          }\n\n          // Create 'strong' if smallest delimiter has even char count. **a***\n          var text = raw.slice(2, -2);\n          return {\n            type: 'strong',\n            raw: raw,\n            text: text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n      }\n    };\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n        text = escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2],\n          tokens: this.lexer.inlineTokens(cap[2])\n        };\n      }\n    };\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n      if (cap) {\n        var text, href;\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n    _proto.url = function url(src, mangle) {\n      var cap;\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n          text = escape(cap[0]);\n          if (cap[1] === 'www.') {\n            href = 'http://' + cap[0];\n          } else {\n            href = cap[0];\n          }\n        }\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n    _proto.inlineText = function inlineText(src, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n      if (cap) {\n        var text;\n        if (this.lexer.state.inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        } else {\n          text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n    return Tokenizer;\n  }();\n\n  /**\n   * Block-Level Grammar\n   */\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.listItemStart = edit(/^( *)(bull) */).replace('bull', block.bullet).getRegex();\n  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '').replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = _extends({}, block);\n\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = _extends({}, block.normal, {\n    table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n  });\n\n  block.gfm.table = edit(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = _extends({}, block.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n\n  /**\n   * Inline-Level Grammar\n   */\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n    nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n    },\n\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  };\n\n  // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n  // sequences em should skip over [title](link), `code`, <html>\n  inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  // lookbehind is not available on Safari as of version 16\n  // inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\n  inline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\n  inline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit(inline.reflink).replace('label', inline._label).replace('ref', block._label).getRegex();\n  inline.nolink = edit(inline.nolink).replace('ref', block._label).getRegex();\n  inline.reflinkSearch = edit(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = _extends({}, inline);\n\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = _extends({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = _extends({}, inline.normal, {\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = _extends({}, inline.gfm, {\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n\n  /**\n   * smartypants text replacement\n   * @param {string} text\n   */\n  function smartypants(text) {\n    return text\n    // em-dashes\n    .replace(/---/g, \"\\u2014\")\n    // en-dashes\n    .replace(/--/g, \"\\u2013\")\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\")\n    // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\")\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\")\n    // closing doubles\n    .replace(/\"/g, \"\\u201D\")\n    // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n\n  /**\n   * mangle email addresses\n   * @param {string} text\n   */\n  function mangle(text) {\n    var out = '',\n      i,\n      ch;\n    var l = text.length;\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n      out += '&#' + ch + ';';\n    }\n    return out;\n  }\n\n  /**\n   * Block Lexer\n   */\n  var Lexer = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || exports.defaults;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      this.tokenizer.lexer = this;\n      this.inlineQueue = [];\n      this.state = {\n        inLink: false,\n        inRawBlock: false,\n        top: true\n      };\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n      this.tokenizer.rules = rules;\n    }\n\n    /**\n     * Expose Rules\n     */\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n\n    /**\n     * Static Lex Inline Method\n     */;\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n\n    /**\n     * Preprocessing\n     */;\n    var _proto = Lexer.prototype;\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n');\n      this.blockTokens(src, this.tokens);\n      var next;\n      while (next = this.inlineQueue.shift()) {\n        this.inlineTokens(next.src, next.tokens);\n      }\n      return this.tokens;\n    }\n\n    /**\n     * Lexing\n     */;\n    _proto.blockTokens = function blockTokens(src, tokens) {\n      var _this = this;\n      if (tokens === void 0) {\n        tokens = [];\n      }\n      if (this.options.pedantic) {\n        src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n      } else {\n        src = src.replace(/^( *)(\\t+)/gm, function (_, leading, tabs) {\n          return leading + '    '.repeat(tabs.length);\n        });\n      }\n      var token, lastToken, cutSrc, lastParagraphClipped;\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n          continue;\n        }\n\n        // newline\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n          if (token.raw.length === 1 && tokens.length > 0) {\n            // if there's a single \\n as a spacer, it's terminating the last line,\n            // so move it there so that we don't get unecessary paragraph tags\n            tokens[tokens.length - 1].raw += '\\n';\n          } else {\n            tokens.push(token);\n          }\n          continue;\n        }\n\n        // code\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n          // An indented code block cannot interrupt a paragraph.\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n          continue;\n        }\n\n        // fences\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // heading\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // hr\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // blockquote\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // list\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // html\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // def\n        if (token = this.tokenizer.def(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.raw;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n          continue;\n        }\n\n        // table (gfm)\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // lheading\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n        cutSrc = src;\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n        if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        }\n\n        // text\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n          continue;\n        }\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n      this.state.top = true;\n      return tokens;\n    };\n    _proto.inline = function inline(src, tokens) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n      this.inlineQueue.push({\n        src: src,\n        tokens: tokens\n      });\n      return tokens;\n    }\n\n    /**\n     * Lexing/Compiling\n     */;\n    _proto.inlineTokens = function inlineTokens(src, tokens) {\n      var _this2 = this;\n      if (tokens === void 0) {\n        tokens = [];\n      }\n      var token, lastToken, cutSrc;\n\n      // String with links masked to avoid interference with em and strong\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar;\n\n      // Mask out reflinks\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      }\n      // Mask out other blocks\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      }\n\n      // Mask out escaped em & strong delimiters\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n        this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n      }\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n        keepPrevChar = false;\n\n        // extensions\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this2\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n          continue;\n        }\n\n        // escape\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // tag\n        if (token = this.tokenizer.tag(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n          continue;\n        }\n\n        // link\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // reflink, nolink\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n          continue;\n        }\n\n        // em & strong\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // code\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // br\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // del (gfm)\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // autolink\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // url (gfm)\n        if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n        cutSrc = src;\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n        if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n          src = src.substring(token.raw.length);\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n          continue;\n        }\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n      return tokens;\n    };\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n    return Lexer;\n  }();\n\n  /**\n   * Renderer\n   */\n  var Renderer = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || exports.defaults;\n    }\n    var _proto = Renderer.prototype;\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n      _code = _code.replace(/\\n$/, '') + '\\n';\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n      }\n      return '<pre><code class=\"' + this.options.langPrefix + escape(lang) + '\">' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n    }\n\n    /**\n     * @param {string} quote\n     */;\n    _proto.blockquote = function blockquote(quote) {\n      return \"<blockquote>\\n\" + quote + \"</blockquote>\\n\";\n    };\n    _proto.html = function html(_html) {\n      return _html;\n    }\n\n    /**\n     * @param {string} text\n     * @param {string} level\n     * @param {string} raw\n     * @param {any} slugger\n     */;\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        var id = this.options.headerPrefix + slugger.slug(raw);\n        return \"<h\" + level + \" id=\\\"\" + id + \"\\\">\" + text + \"</h\" + level + \">\\n\";\n      }\n\n      // ignore IDs\n      return \"<h\" + level + \">\" + text + \"</h\" + level + \">\\n\";\n    };\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n        startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n\n    /**\n     * @param {string} text\n     */;\n    _proto.listitem = function listitem(text) {\n      return \"<li>\" + text + \"</li>\\n\";\n    };\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    }\n\n    /**\n     * @param {string} text\n     */;\n    _proto.paragraph = function paragraph(text) {\n      return \"<p>\" + text + \"</p>\\n\";\n    }\n\n    /**\n     * @param {string} header\n     * @param {string} body\n     */;\n    _proto.table = function table(header, body) {\n      if (body) body = \"<tbody>\" + body + \"</tbody>\";\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    }\n\n    /**\n     * @param {string} content\n     */;\n    _proto.tablerow = function tablerow(content) {\n      return \"<tr>\\n\" + content + \"</tr>\\n\";\n    };\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? \"<\" + type + \" align=\\\"\" + flags.align + \"\\\">\" : \"<\" + type + \">\";\n      return tag + content + (\"</\" + type + \">\\n\");\n    }\n\n    /**\n     * span level renderer\n     * @param {string} text\n     */;\n    _proto.strong = function strong(text) {\n      return \"<strong>\" + text + \"</strong>\";\n    }\n\n    /**\n     * @param {string} text\n     */;\n    _proto.em = function em(text) {\n      return \"<em>\" + text + \"</em>\";\n    }\n\n    /**\n     * @param {string} text\n     */;\n    _proto.codespan = function codespan(text) {\n      return \"<code>\" + text + \"</code>\";\n    };\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    }\n\n    /**\n     * @param {string} text\n     */;\n    _proto.del = function del(text) {\n      return \"<del>\" + text + \"</del>\";\n    }\n\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */;\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n      if (href === null) {\n        return text;\n      }\n      var out = '<a href=\"' + href + '\"';\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n      out += '>' + text + '</a>';\n      return out;\n    }\n\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */;\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n      if (href === null) {\n        return text;\n      }\n      var out = \"<img src=\\\"\" + href + \"\\\" alt=\\\"\" + text + \"\\\"\";\n      if (title) {\n        out += \" title=\\\"\" + title + \"\\\"\";\n      }\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n    _proto.text = function text(_text) {\n      return _text;\n    };\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer = /*#__PURE__*/function () {\n    function TextRenderer() {}\n    var _proto = TextRenderer.prototype;\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n    _proto.em = function em(text) {\n      return text;\n    };\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n    _proto.del = function del(text) {\n      return text;\n    };\n    _proto.html = function html(text) {\n      return text;\n    };\n    _proto.text = function text(_text) {\n      return _text;\n    };\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n    _proto.br = function br() {\n      return '';\n    };\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    /**\n     * @param {string} value\n     */\n    var _proto = Slugger.prototype;\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n\n    /**\n     * Finds the next safe (unique) slug to use\n     * @param {string} originalSlug\n     * @param {boolean} isDryRun\n     */;\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n      return slug;\n    }\n\n    /**\n     * Convert string to unique id\n     * @param {object} [options]\n     * @param {boolean} [options.dryrun] Generates the next unique slug without\n     * updating the internal accumulator.\n     */;\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n    return Slugger;\n  }();\n\n  /**\n   * Parsing & Compiling\n   */\n  var Parser = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || exports.defaults;\n      this.options.renderer = this.options.renderer || new Renderer();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer();\n      this.slugger = new Slugger();\n    }\n\n    /**\n     * Static Parse Method\n     */\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n\n    /**\n     * Static Parse Inline Method\n     */;\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n\n    /**\n     * Parse Loop\n     */;\n    var _proto = Parser.prototype;\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n      var out = '',\n        i,\n        j,\n        k,\n        l2,\n        l3,\n        row,\n        cell,\n        header,\n        body,\n        token,\n        ordered,\n        start,\n        loose,\n        itemBody,\n        item,\n        checked,\n        task,\n        checkbox,\n        ret;\n      var l = tokens.length;\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        // Run any renderer extensions\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n          case 'table':\n            {\n              header = '';\n\n              // header\n              cell = '';\n              l2 = token.header.length;\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.rows.length;\n              for (j = 0; j < l2; j++) {\n                row = token.rows[j];\n                cell = '';\n                l3 = row.length;\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n                body += this.renderer.tablerow(cell);\n              }\n              out += this.renderer.table(header, body);\n              continue;\n            }\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n      return out;\n    }\n\n    /**\n     * Parse Inline Tokens\n     */;\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n        i,\n        token,\n        ret;\n      var l = tokens.length;\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        // Run any renderer extensions\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n      return out;\n    };\n    return Parser;\n  }();\n  var Hooks = /*#__PURE__*/function () {\n    function Hooks(options) {\n      this.options = options || exports.defaults;\n    }\n    var _proto = Hooks.prototype;\n    /**\n     * Process markdown before marked\n     */\n    _proto.preprocess = function preprocess(markdown) {\n      return markdown;\n    }\n\n    /**\n     * Process HTML after marked is finished\n     */;\n    _proto.postprocess = function postprocess(html) {\n      return html;\n    };\n    return Hooks;\n  }();\n  Hooks.passThroughHooks = new Set(['preprocess', 'postprocess']);\n  function onError(silent, async, callback) {\n    return function (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n      if (silent) {\n        var msg = '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n        if (async) {\n          return Promise.resolve(msg);\n        }\n        if (callback) {\n          callback(null, msg);\n          return;\n        }\n        return msg;\n      }\n      if (async) {\n        return Promise.reject(e);\n      }\n      if (callback) {\n        callback(e);\n        return;\n      }\n      throw e;\n    };\n  }\n  function parseMarkdown(lexer, parser) {\n    return function (src, opt, callback) {\n      if (typeof opt === 'function') {\n        callback = opt;\n        opt = null;\n      }\n      var origOpt = _extends({}, opt);\n      opt = _extends({}, marked.defaults, origOpt);\n      var throwError = onError(opt.silent, opt.async, callback);\n\n      // throw error in case of non string input\n      if (typeof src === 'undefined' || src === null) {\n        return throwError(new Error('marked(): input parameter is undefined or null'));\n      }\n      if (typeof src !== 'string') {\n        return throwError(new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected'));\n      }\n      checkSanitizeDeprecation(opt);\n      if (opt.hooks) {\n        opt.hooks.options = opt;\n      }\n      if (callback) {\n        var highlight = opt.highlight;\n        var tokens;\n        try {\n          if (opt.hooks) {\n            src = opt.hooks.preprocess(src);\n          }\n          tokens = lexer(src, opt);\n        } catch (e) {\n          return throwError(e);\n        }\n        var done = function done(err) {\n          var out;\n          if (!err) {\n            try {\n              if (opt.walkTokens) {\n                marked.walkTokens(tokens, opt.walkTokens);\n              }\n              out = parser(tokens, opt);\n              if (opt.hooks) {\n                out = opt.hooks.postprocess(out);\n              }\n            } catch (e) {\n              err = e;\n            }\n          }\n          opt.highlight = highlight;\n          return err ? throwError(err) : callback(null, out);\n        };\n        if (!highlight || highlight.length < 3) {\n          return done();\n        }\n        delete opt.highlight;\n        if (!tokens.length) return done();\n        var pending = 0;\n        marked.walkTokens(tokens, function (token) {\n          if (token.type === 'code') {\n            pending++;\n            setTimeout(function () {\n              highlight(token.text, token.lang, function (err, code) {\n                if (err) {\n                  return done(err);\n                }\n                if (code != null && code !== token.text) {\n                  token.text = code;\n                  token.escaped = true;\n                }\n                pending--;\n                if (pending === 0) {\n                  done();\n                }\n              });\n            }, 0);\n          }\n        });\n        if (pending === 0) {\n          done();\n        }\n        return;\n      }\n      if (opt.async) {\n        return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src).then(function (src) {\n          return lexer(src, opt);\n        }).then(function (tokens) {\n          return opt.walkTokens ? Promise.all(marked.walkTokens(tokens, opt.walkTokens)).then(function () {\n            return tokens;\n          }) : tokens;\n        }).then(function (tokens) {\n          return parser(tokens, opt);\n        }).then(function (html) {\n          return opt.hooks ? opt.hooks.postprocess(html) : html;\n        })[\"catch\"](throwError);\n      }\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src);\n        }\n        var _tokens = lexer(src, opt);\n        if (opt.walkTokens) {\n          marked.walkTokens(_tokens, opt.walkTokens);\n        }\n        var html = parser(_tokens, opt);\n        if (opt.hooks) {\n          html = opt.hooks.postprocess(html);\n        }\n        return html;\n      } catch (e) {\n        return throwError(e);\n      }\n    };\n  }\n\n  /**\n   * Marked\n   */\n  function marked(src, opt, callback) {\n    return parseMarkdown(Lexer.lex, Parser.parse)(src, opt, callback);\n  }\n\n  /**\n   * Options\n   */\n\n  marked.options = marked.setOptions = function (opt) {\n    marked.defaults = _extends({}, marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n  marked.getDefaults = getDefaults;\n  marked.defaults = exports.defaults;\n\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    args.forEach(function (pack) {\n      // copy options to new object\n      var opts = _extends({}, pack);\n\n      // set async to true if it was set to true before\n      opts.async = marked.defaults.async || opts.async || false;\n\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers[ext.name];\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n                var ret = ext.renderer.apply(this, args);\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n        opts.extensions = extensions;\n      }\n\n      // ==-- Parse \"overwrite\" extensions --== //\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop];\n            // Replace renderer with func to run extension, but fall back if false\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n              var ret = pack.renderer[prop].apply(renderer, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n              return ret;\n            };\n          };\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n          opts.renderer = renderer;\n        })();\n      }\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop];\n            // Replace tokenizer with func to run extension, but fall back if false\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n              return ret;\n            };\n          };\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n          opts.tokenizer = tokenizer;\n        })();\n      }\n\n      // ==-- Parse Hooks extensions --== //\n      if (pack.hooks) {\n        (function () {\n          var hooks = marked.defaults.hooks || new Hooks();\n          var _loop3 = function _loop3(prop) {\n            var prevHook = hooks[prop];\n            if (Hooks.passThroughHooks.has(prop)) {\n              hooks[prop] = function (arg) {\n                if (marked.defaults.async) {\n                  return Promise.resolve(pack.hooks[prop].call(hooks, arg)).then(function (ret) {\n                    return prevHook.call(hooks, ret);\n                  });\n                }\n                var ret = pack.hooks[prop].call(hooks, arg);\n                return prevHook.call(hooks, ret);\n              };\n            } else {\n              hooks[prop] = function () {\n                for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n                  args[_key5] = arguments[_key5];\n                }\n                var ret = pack.hooks[prop].apply(hooks, args);\n                if (ret === false) {\n                  ret = prevHook.apply(hooks, args);\n                }\n                return ret;\n              };\n            }\n          };\n          for (var prop in pack.hooks) {\n            _loop3(prop);\n          }\n          opts.hooks = hooks;\n        })();\n      }\n\n      // ==-- Parse WalkTokens extensions --== //\n      if (pack.walkTokens) {\n        var _walkTokens = marked.defaults.walkTokens;\n        opts.walkTokens = function (token) {\n          var values = [];\n          values.push(pack.walkTokens.call(this, token));\n          if (_walkTokens) {\n            values = values.concat(_walkTokens.call(this, token));\n          }\n          return values;\n        };\n      }\n      marked.setOptions(opts);\n    });\n  };\n\n  /**\n   * Run callback for every token\n   */\n\n  marked.walkTokens = function (tokens, callback) {\n    var values = [];\n    var _loop4 = function _loop4() {\n      var token = _step.value;\n      values = values.concat(callback.call(marked, token));\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              values = values.concat(marked.walkTokens(cell.tokens, callback));\n            }\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                values = values.concat(marked.walkTokens(_cell.tokens, callback));\n              }\n            }\n            break;\n          }\n        case 'list':\n          {\n            values = values.concat(marked.walkTokens(token.items, callback));\n            break;\n          }\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                values = values.concat(marked.walkTokens(token[childTokens], callback));\n              });\n            } else if (token.tokens) {\n              values = values.concat(marked.walkTokens(token.tokens, callback));\n            }\n          }\n      }\n    };\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop4();\n    }\n    return values;\n  };\n\n  /**\n   * Parse Inline\n   * @param {string} src\n   */\n  marked.parseInline = parseMarkdown(Lexer.lexInline, Parser.parseInline);\n\n  /**\n   * Expose\n   */\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.Hooks = Hooks;\n  marked.parse = marked;\n  var options = marked.options;\n  var setOptions = marked.setOptions;\n  var use = marked.use;\n  var walkTokens = marked.walkTokens;\n  var parseInline = marked.parseInline;\n  var parse = marked;\n  var parser = Parser.parse;\n  var lexer = Lexer.lex;\n  exports.Hooks = Hooks;\n  exports.Lexer = Lexer;\n  exports.Parser = Parser;\n  exports.Renderer = Renderer;\n  exports.Slugger = Slugger;\n  exports.TextRenderer = TextRenderer;\n  exports.Tokenizer = Tokenizer;\n  exports.getDefaults = getDefaults;\n  exports.lexer = lexer;\n  exports.marked = marked;\n  exports.options = options;\n  exports.parse = parse;\n  exports.parseInline = parseInline;\n  exports.parser = parser;\n  exports.setOptions = setOptions;\n  exports.use = use;\n  exports.walkTokens = walkTokens;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","marked","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","Constructor","protoProps","staticProps","prototype","_extends","assign","bind","arguments","source","hasOwnProperty","call","apply","_unsupportedIterableToArray","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","arr","len","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","Symbol","iterator","next","isArray","done","value","TypeError","_toPrimitive","input","hint","prim","toPrimitive","undefined","res","String","Number","arg","getDefaults","async","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","hooks","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","RegExp","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","replace","unescapeTest","unescape","_","toLowerCase","charAt","fromCharCode","parseInt","substring","caret","edit","regex","opt","obj","val","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","e","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","exec","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","split","trim","shift","pop","splice","push","c","invert","l","suffLen","currChar","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","outputLink","cap","link","raw","lexer","title","text","state","inLink","token","type","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","Tokenizer","options","_proto","space","src","rules","block","newline","code","codeBlockStyle","fences","lang","inline","_escapes","heading","trimmed","depth","hr","blockquote","top","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","t","repeat","trimLeft","search","nextBulletRegex","Math","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","spacers","filter","hasMultipleLineBreaks","some","pre","def","tag","table","item","header","align","rows","j","k","lheading","paragraph","escape$1","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","index","_text","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","out","charCodeAt","random","Lexer","create","inlineQueue","lex","lexInline","_this","leading","tabs","lastToken","cutSrc","lastParagraphClipped","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","error","Error","_this2","keepPrevChar","keys","includes","lastIndexOf","startInline","get","Renderer","_code","infostring","quote","_html","slugger","id","slug","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parse","parser","parseInline","l2","l3","cell","itemBody","ret","renderers","unshift","Hooks","preprocess","markdown","postprocess","passThroughHooks","Set","onError","callback","message","msg","Promise","resolve","reject","parseMarkdown","origOpt","throwError","err","pending","setTimeout","then","all","_tokens","setOptions","use","childTokens","_len","args","_key","pack","opts","ext","prevRenderer","_len2","_key2","_loop","prop","_len3","_key3","_loop2","prevTokenizer","_len4","_key4","_loop3","prevHook","has","_len5","_key5","_walkTokens","values","concat","_loop4","_step","_iterator2","_step2","_iterator3","_step3","_iterator4","_step4","_cell","_iterator"],"sources":["/home/anjuman/Desktop/apiSecurityEngine/apisecurityengine-frontend/node_modules/marked/lib/marked.umd.js"],"sourcesContent":["/**\n * marked v4.3.0 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.marked = {}));\n})(this, (function (exports) { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n  }\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n  function _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n    return _extends.apply(this, arguments);\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  function _toPrimitive(input, hint) {\n    if (typeof input !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n      var res = prim.call(input, hint || \"default\");\n      if (typeof res !== \"object\") return res;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n  }\n  function _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return typeof key === \"symbol\" ? key : String(key);\n  }\n\n  function getDefaults() {\n    return {\n      async: false,\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      hooks: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n  exports.defaults = getDefaults();\n  function changeDefaults(newDefaults) {\n    exports.defaults = newDefaults;\n  }\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = new RegExp(escapeTest.source, 'g');\n  var escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\n  var escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n    return html;\n  }\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  /**\n   * @param {string} html\n   */\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n      return '';\n    });\n  }\n  var caret = /(^|[^\\[])\\^/g;\n\n  /**\n   * @param {string | RegExp} regex\n   * @param {string} opt\n   */\n  function edit(regex, opt) {\n    regex = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  /**\n   * @param {boolean} sanitize\n   * @param {string} base\n   * @param {string} href\n   */\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n    return href;\n  }\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  /**\n   * @param {string} base\n   * @param {string} href\n   */\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n          curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') {\n          escaped = !escaped;\n        }\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/);\n    var i = 0;\n\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n      cells.shift();\n    }\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n      cells.pop();\n    }\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n    return cells;\n  }\n\n  /**\n   * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n   * /c*$/ is vulnerable to REDOS.\n   *\n   * @param {string} str\n   * @param {string} c\n   * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n   */\n  function rtrim(str, c, invert) {\n    var l = str.length;\n    if (l === 0) {\n      return '';\n    }\n\n    // Length of suffix matching the invert condition.\n    var suffLen = 0;\n\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n    return str.slice(0, l - suffLen);\n  }\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n    var l = str.length;\n    var level = 0,\n      i = 0;\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n    return -1;\n  }\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  }\n\n  // copied from https://stackoverflow.com/a/5450113/806777\n  /**\n   * @param {string} pattern\n   * @param {number} count\n   */\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n    var result = '';\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n      count >>= 1;\n      pattern += pattern;\n    }\n    return result + pattern;\n  }\n\n  function outputLink(cap, link, raw, lexer) {\n    var href = link.href;\n    var title = link.title ? escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n    if (cap[0].charAt(0) !== '!') {\n      lexer.state.inLink = true;\n      var token = {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text,\n        tokens: lexer.inlineTokens(text)\n      };\n      lexer.state.inLink = false;\n      return token;\n    }\n    return {\n      type: 'image',\n      raw: raw,\n      href: href,\n      title: title,\n      text: escape(text)\n    };\n  }\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n    if (matchIndentToCode === null) {\n      return text;\n    }\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n      var indentInNode = matchIndentInNode[0];\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n      return node;\n    }).join('\\n');\n  }\n\n  /**\n   * Tokenizer\n   */\n  var Tokenizer = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || exports.defaults;\n    }\n    var _proto = Tokenizer.prototype;\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n      if (cap && cap[0].length > 0) {\n        return {\n          type: 'space',\n          raw: cap[0]\n        };\n      }\n    };\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n          text: text\n        };\n      }\n    };\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n      if (cap) {\n        var text = cap[2].trim();\n\n        // remove trailing #s\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text,\n          tokens: this.lexer.inline(text)\n        };\n      }\n    };\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n      if (cap) {\n        var text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n        var top = this.lexer.state.top;\n        this.lexer.state.top = true;\n        var tokens = this.lexer.blockTokens(text);\n        this.lexer.state.top = top;\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          tokens: tokens,\n          text: text\n        };\n      }\n    };\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n      if (cap) {\n        var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;\n        var bull = cap[1].trim();\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: '',\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        };\n        bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n        if (this.options.pedantic) {\n          bull = isordered ? bull : '[*+-]';\n        }\n\n        // Get next list item\n        var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))\");\n\n        // Check if current bullet point can start a new List Item\n        while (src) {\n          endEarly = false;\n          if (!(cap = itemRegex.exec(src))) {\n            break;\n          }\n          if (this.rules.block.hr.test(src)) {\n            // End list if bullet was actually HR (possibly move into itemRegex?)\n            break;\n          }\n          raw = cap[0];\n          src = src.substring(raw.length);\n          line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, function (t) {\n            return ' '.repeat(3 * t.length);\n          });\n          nextLine = src.split('\\n', 1)[0];\n          if (this.options.pedantic) {\n            indent = 2;\n            itemContents = line.trimLeft();\n          } else {\n            indent = cap[2].search(/[^ ]/); // Find first non-space char\n            indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n            itemContents = line.slice(indent);\n            indent += cap[1].length;\n          }\n          blankLine = false;\n          if (!line && /^ *$/.test(nextLine)) {\n            // Items begin with at most one blank line\n            raw += nextLine + '\\n';\n            src = src.substring(nextLine.length + 1);\n            endEarly = true;\n          }\n          if (!endEarly) {\n            var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))\");\n            var hrRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)\");\n            var fencesBeginRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:```|~~~)\");\n            var headingBeginRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}#\");\n\n            // Check if following lines should be included in List Item\n            while (src) {\n              rawLine = src.split('\\n', 1)[0];\n              nextLine = rawLine;\n\n              // Re-align to follow commonmark nesting rules\n              if (this.options.pedantic) {\n                nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n              }\n\n              // End list item if found code fences\n              if (fencesBeginRegex.test(nextLine)) {\n                break;\n              }\n\n              // End list item if found start of new heading\n              if (headingBeginRegex.test(nextLine)) {\n                break;\n              }\n\n              // End list item if found start of new bullet\n              if (nextBulletRegex.test(nextLine)) {\n                break;\n              }\n\n              // Horizontal rule found\n              if (hrRegex.test(src)) {\n                break;\n              }\n              if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) {\n                // Dedent if possible\n                itemContents += '\\n' + nextLine.slice(indent);\n              } else {\n                // not enough indentation\n                if (blankLine) {\n                  break;\n                }\n\n                // paragraph continuation unless last line was a different block level element\n                if (line.search(/[^ ]/) >= 4) {\n                  // indented code block\n                  break;\n                }\n                if (fencesBeginRegex.test(line)) {\n                  break;\n                }\n                if (headingBeginRegex.test(line)) {\n                  break;\n                }\n                if (hrRegex.test(line)) {\n                  break;\n                }\n                itemContents += '\\n' + nextLine;\n              }\n              if (!blankLine && !nextLine.trim()) {\n                // Check if current line is blank\n                blankLine = true;\n              }\n              raw += rawLine + '\\n';\n              src = src.substring(rawLine.length + 1);\n              line = nextLine.slice(indent);\n            }\n          }\n          if (!list.loose) {\n            // If the previous item ended with a blank line, the list is loose\n            if (endsWithBlankLine) {\n              list.loose = true;\n            } else if (/\\n *\\n *$/.test(raw)) {\n              endsWithBlankLine = true;\n            }\n          }\n\n          // Check for task list items\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.exec(itemContents);\n            if (istask) {\n              ischecked = istask[0] !== '[ ] ';\n              itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: !!istask,\n            checked: ischecked,\n            loose: false,\n            text: itemContents\n          });\n          list.raw += raw;\n        }\n\n        // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n        list.items[list.items.length - 1].raw = raw.trimRight();\n        list.items[list.items.length - 1].text = itemContents.trimRight();\n        list.raw = list.raw.trimRight();\n        var l = list.items.length;\n\n        // Item child tokens handled here at end because we needed to have the final item to trim it first\n        for (i = 0; i < l; i++) {\n          this.lexer.state.top = false;\n          list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n          if (!list.loose) {\n            // Check if list should be loose\n            var spacers = list.items[i].tokens.filter(function (t) {\n              return t.type === 'space';\n            });\n            var hasMultipleLineBreaks = spacers.length > 0 && spacers.some(function (t) {\n              return /\\n.*\\n/.test(t.raw);\n            });\n            list.loose = hasMultipleLineBreaks;\n          }\n        }\n\n        // Set all items to loose if list is loose\n        if (list.loose) {\n          for (i = 0; i < l; i++) {\n            list.items[i].loose = true;\n          }\n        }\n        return list;\n      }\n    };\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n      if (cap) {\n        var token = {\n          type: 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        };\n        if (this.options.sanitize) {\n          var text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n          token.type = 'paragraph';\n          token.text = text;\n          token.tokens = this.lexer.inline(text);\n        }\n        return token;\n      }\n    };\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n      if (cap) {\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        var href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n        var title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: href,\n          title: title\n        };\n      }\n    };\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1]).map(function (c) {\n            return {\n              text: c\n            };\n          }),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n        };\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i, j, k, row;\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n          l = item.rows.length;\n          for (i = 0; i < l; i++) {\n            item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n              return {\n                text: c\n              };\n            });\n          }\n\n          // parse child tokens inside headers and cells\n\n          // header child tokens\n          l = item.header.length;\n          for (j = 0; j < l; j++) {\n            item.header[j].tokens = this.lexer.inline(item.header[j].text);\n          }\n\n          // cell child tokens\n          l = item.rows.length;\n          for (j = 0; j < l; j++) {\n            row = item.rows[j];\n            for (k = 0; k < row.length; k++) {\n              row[k].tokens = this.lexer.inline(row[k].text);\n            }\n          }\n          return item;\n        }\n      }\n    };\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1],\n          tokens: this.lexer.inline(cap[1])\n        };\n      }\n    };\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n      if (cap) {\n        var text = cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1];\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: text,\n          tokens: this.lexer.inline(text)\n        };\n      }\n    };\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n      if (cap) {\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0],\n          tokens: this.lexer.inline(cap[0])\n        };\n      }\n    };\n    _proto.escape = function escape$1(src) {\n      var cap = this.rules.inline.escape.exec(src);\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: escape(cap[1])\n        };\n      }\n    };\n    _proto.tag = function tag(src) {\n      var cap = this.rules.inline.tag.exec(src);\n      if (cap) {\n        if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n          this.lexer.state.inLink = true;\n        } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.lexer.state.inLink = false;\n        }\n        if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = true;\n        } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = false;\n        }\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: this.lexer.state.inLink,\n          inRawBlock: this.lexer.state.inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n        };\n      }\n    };\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          }\n\n          // ending angle bracket cannot be escaped\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n        var href = cap[2];\n        var title = '';\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n        href = href.trim();\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0], this.lexer);\n      }\n    };\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n        if (!link) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n        return outputLink(cap, link, cap[0], this.lexer);\n      }\n    };\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return;\n\n      // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDF70-\\uDF81\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n          rLength,\n          delimTotal = lLength,\n          midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0;\n\n        // Clip maskedSrc to same section of string as src (move to lexer?)\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n          // Remove extra characters. *a*** -> *a*\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n          var raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n          // Create `em` if smallest delimiter has odd char count. *a***\n          if (Math.min(lLength, rLength) % 2) {\n            var _text = raw.slice(1, -1);\n            return {\n              type: 'em',\n              raw: raw,\n              text: _text,\n              tokens: this.lexer.inlineTokens(_text)\n            };\n          }\n\n          // Create 'strong' if smallest delimiter has even char count. **a***\n          var text = raw.slice(2, -2);\n          return {\n            type: 'strong',\n            raw: raw,\n            text: text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n      }\n    };\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n        text = escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2],\n          tokens: this.lexer.inlineTokens(cap[2])\n        };\n      }\n    };\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n      if (cap) {\n        var text, href;\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n    _proto.url = function url(src, mangle) {\n      var cap;\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n          text = escape(cap[0]);\n          if (cap[1] === 'www.') {\n            href = 'http://' + cap[0];\n          } else {\n            href = cap[0];\n          }\n        }\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n    _proto.inlineText = function inlineText(src, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n      if (cap) {\n        var text;\n        if (this.lexer.state.inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        } else {\n          text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n    return Tokenizer;\n  }();\n\n  /**\n   * Block-Level Grammar\n   */\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.listItemStart = edit(/^( *)(bull) */).replace('bull', block.bullet).getRegex();\n  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '').replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = _extends({}, block);\n\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = _extends({}, block.normal, {\n    table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n  });\n\n  block.gfm.table = edit(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = _extends({}, block.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n\n  /**\n   * Inline-Level Grammar\n   */\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n    nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n    },\n\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  };\n\n  // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n  // sequences em should skip over [title](link), `code`, <html>\n  inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  // lookbehind is not available on Safari as of version 16\n  // inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\n  inline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\n  inline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit(inline.reflink).replace('label', inline._label).replace('ref', block._label).getRegex();\n  inline.nolink = edit(inline.nolink).replace('ref', block._label).getRegex();\n  inline.reflinkSearch = edit(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = _extends({}, inline);\n\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = _extends({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = _extends({}, inline.normal, {\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = _extends({}, inline.gfm, {\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n\n  /**\n   * smartypants text replacement\n   * @param {string} text\n   */\n  function smartypants(text) {\n    return text\n    // em-dashes\n    .replace(/---/g, \"\\u2014\")\n    // en-dashes\n    .replace(/--/g, \"\\u2013\")\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\")\n    // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\")\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\")\n    // closing doubles\n    .replace(/\"/g, \"\\u201D\")\n    // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n\n  /**\n   * mangle email addresses\n   * @param {string} text\n   */\n  function mangle(text) {\n    var out = '',\n      i,\n      ch;\n    var l = text.length;\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n      out += '&#' + ch + ';';\n    }\n    return out;\n  }\n\n  /**\n   * Block Lexer\n   */\n  var Lexer = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || exports.defaults;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      this.tokenizer.lexer = this;\n      this.inlineQueue = [];\n      this.state = {\n        inLink: false,\n        inRawBlock: false,\n        top: true\n      };\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n      this.tokenizer.rules = rules;\n    }\n\n    /**\n     * Expose Rules\n     */\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n\n    /**\n     * Static Lex Inline Method\n     */;\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n\n    /**\n     * Preprocessing\n     */;\n    var _proto = Lexer.prototype;\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n');\n      this.blockTokens(src, this.tokens);\n      var next;\n      while (next = this.inlineQueue.shift()) {\n        this.inlineTokens(next.src, next.tokens);\n      }\n      return this.tokens;\n    }\n\n    /**\n     * Lexing\n     */;\n    _proto.blockTokens = function blockTokens(src, tokens) {\n      var _this = this;\n      if (tokens === void 0) {\n        tokens = [];\n      }\n      if (this.options.pedantic) {\n        src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n      } else {\n        src = src.replace(/^( *)(\\t+)/gm, function (_, leading, tabs) {\n          return leading + '    '.repeat(tabs.length);\n        });\n      }\n      var token, lastToken, cutSrc, lastParagraphClipped;\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n          continue;\n        }\n\n        // newline\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n          if (token.raw.length === 1 && tokens.length > 0) {\n            // if there's a single \\n as a spacer, it's terminating the last line,\n            // so move it there so that we don't get unecessary paragraph tags\n            tokens[tokens.length - 1].raw += '\\n';\n          } else {\n            tokens.push(token);\n          }\n          continue;\n        }\n\n        // code\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n          // An indented code block cannot interrupt a paragraph.\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n          continue;\n        }\n\n        // fences\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // heading\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // hr\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // blockquote\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // list\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // html\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // def\n        if (token = this.tokenizer.def(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.raw;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n          continue;\n        }\n\n        // table (gfm)\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // lheading\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n        cutSrc = src;\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n        if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        }\n\n        // text\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n          continue;\n        }\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n      this.state.top = true;\n      return tokens;\n    };\n    _proto.inline = function inline(src, tokens) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n      this.inlineQueue.push({\n        src: src,\n        tokens: tokens\n      });\n      return tokens;\n    }\n\n    /**\n     * Lexing/Compiling\n     */;\n    _proto.inlineTokens = function inlineTokens(src, tokens) {\n      var _this2 = this;\n      if (tokens === void 0) {\n        tokens = [];\n      }\n      var token, lastToken, cutSrc;\n\n      // String with links masked to avoid interference with em and strong\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar;\n\n      // Mask out reflinks\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      }\n      // Mask out other blocks\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      }\n\n      // Mask out escaped em & strong delimiters\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n        this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n      }\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n        keepPrevChar = false;\n\n        // extensions\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this2\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n          continue;\n        }\n\n        // escape\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // tag\n        if (token = this.tokenizer.tag(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n          continue;\n        }\n\n        // link\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // reflink, nolink\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n          continue;\n        }\n\n        // em & strong\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // code\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // br\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // del (gfm)\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // autolink\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // url (gfm)\n        if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        }\n\n        // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n        cutSrc = src;\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n        if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n          src = src.substring(token.raw.length);\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n          continue;\n        }\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n      return tokens;\n    };\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n    return Lexer;\n  }();\n\n  /**\n   * Renderer\n   */\n  var Renderer = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || exports.defaults;\n    }\n    var _proto = Renderer.prototype;\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n      _code = _code.replace(/\\n$/, '') + '\\n';\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n      }\n      return '<pre><code class=\"' + this.options.langPrefix + escape(lang) + '\">' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n    }\n\n    /**\n     * @param {string} quote\n     */;\n    _proto.blockquote = function blockquote(quote) {\n      return \"<blockquote>\\n\" + quote + \"</blockquote>\\n\";\n    };\n    _proto.html = function html(_html) {\n      return _html;\n    }\n\n    /**\n     * @param {string} text\n     * @param {string} level\n     * @param {string} raw\n     * @param {any} slugger\n     */;\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        var id = this.options.headerPrefix + slugger.slug(raw);\n        return \"<h\" + level + \" id=\\\"\" + id + \"\\\">\" + text + \"</h\" + level + \">\\n\";\n      }\n\n      // ignore IDs\n      return \"<h\" + level + \">\" + text + \"</h\" + level + \">\\n\";\n    };\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n        startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n\n    /**\n     * @param {string} text\n     */;\n    _proto.listitem = function listitem(text) {\n      return \"<li>\" + text + \"</li>\\n\";\n    };\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    }\n\n    /**\n     * @param {string} text\n     */;\n    _proto.paragraph = function paragraph(text) {\n      return \"<p>\" + text + \"</p>\\n\";\n    }\n\n    /**\n     * @param {string} header\n     * @param {string} body\n     */;\n    _proto.table = function table(header, body) {\n      if (body) body = \"<tbody>\" + body + \"</tbody>\";\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    }\n\n    /**\n     * @param {string} content\n     */;\n    _proto.tablerow = function tablerow(content) {\n      return \"<tr>\\n\" + content + \"</tr>\\n\";\n    };\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? \"<\" + type + \" align=\\\"\" + flags.align + \"\\\">\" : \"<\" + type + \">\";\n      return tag + content + (\"</\" + type + \">\\n\");\n    }\n\n    /**\n     * span level renderer\n     * @param {string} text\n     */;\n    _proto.strong = function strong(text) {\n      return \"<strong>\" + text + \"</strong>\";\n    }\n\n    /**\n     * @param {string} text\n     */;\n    _proto.em = function em(text) {\n      return \"<em>\" + text + \"</em>\";\n    }\n\n    /**\n     * @param {string} text\n     */;\n    _proto.codespan = function codespan(text) {\n      return \"<code>\" + text + \"</code>\";\n    };\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    }\n\n    /**\n     * @param {string} text\n     */;\n    _proto.del = function del(text) {\n      return \"<del>\" + text + \"</del>\";\n    }\n\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */;\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n      if (href === null) {\n        return text;\n      }\n      var out = '<a href=\"' + href + '\"';\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n      out += '>' + text + '</a>';\n      return out;\n    }\n\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */;\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n      if (href === null) {\n        return text;\n      }\n      var out = \"<img src=\\\"\" + href + \"\\\" alt=\\\"\" + text + \"\\\"\";\n      if (title) {\n        out += \" title=\\\"\" + title + \"\\\"\";\n      }\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n    _proto.text = function text(_text) {\n      return _text;\n    };\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer = /*#__PURE__*/function () {\n    function TextRenderer() {}\n    var _proto = TextRenderer.prototype;\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n    _proto.em = function em(text) {\n      return text;\n    };\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n    _proto.del = function del(text) {\n      return text;\n    };\n    _proto.html = function html(text) {\n      return text;\n    };\n    _proto.text = function text(_text) {\n      return _text;\n    };\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n    _proto.br = function br() {\n      return '';\n    };\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    /**\n     * @param {string} value\n     */\n    var _proto = Slugger.prototype;\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n\n    /**\n     * Finds the next safe (unique) slug to use\n     * @param {string} originalSlug\n     * @param {boolean} isDryRun\n     */;\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n      return slug;\n    }\n\n    /**\n     * Convert string to unique id\n     * @param {object} [options]\n     * @param {boolean} [options.dryrun] Generates the next unique slug without\n     * updating the internal accumulator.\n     */;\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n    return Slugger;\n  }();\n\n  /**\n   * Parsing & Compiling\n   */\n  var Parser = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || exports.defaults;\n      this.options.renderer = this.options.renderer || new Renderer();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer();\n      this.slugger = new Slugger();\n    }\n\n    /**\n     * Static Parse Method\n     */\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n\n    /**\n     * Static Parse Inline Method\n     */;\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n\n    /**\n     * Parse Loop\n     */;\n    var _proto = Parser.prototype;\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n      var out = '',\n        i,\n        j,\n        k,\n        l2,\n        l3,\n        row,\n        cell,\n        header,\n        body,\n        token,\n        ordered,\n        start,\n        loose,\n        itemBody,\n        item,\n        checked,\n        task,\n        checkbox,\n        ret;\n      var l = tokens.length;\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        // Run any renderer extensions\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n          case 'table':\n            {\n              header = '';\n\n              // header\n              cell = '';\n              l2 = token.header.length;\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.rows.length;\n              for (j = 0; j < l2; j++) {\n                row = token.rows[j];\n                cell = '';\n                l3 = row.length;\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n                body += this.renderer.tablerow(cell);\n              }\n              out += this.renderer.table(header, body);\n              continue;\n            }\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n      return out;\n    }\n\n    /**\n     * Parse Inline Tokens\n     */;\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n        i,\n        token,\n        ret;\n      var l = tokens.length;\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        // Run any renderer extensions\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n      return out;\n    };\n    return Parser;\n  }();\n\n  var Hooks = /*#__PURE__*/function () {\n    function Hooks(options) {\n      this.options = options || exports.defaults;\n    }\n    var _proto = Hooks.prototype;\n    /**\n     * Process markdown before marked\n     */\n    _proto.preprocess = function preprocess(markdown) {\n      return markdown;\n    }\n\n    /**\n     * Process HTML after marked is finished\n     */;\n    _proto.postprocess = function postprocess(html) {\n      return html;\n    };\n    return Hooks;\n  }();\n  Hooks.passThroughHooks = new Set(['preprocess', 'postprocess']);\n\n  function onError(silent, async, callback) {\n    return function (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n      if (silent) {\n        var msg = '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n        if (async) {\n          return Promise.resolve(msg);\n        }\n        if (callback) {\n          callback(null, msg);\n          return;\n        }\n        return msg;\n      }\n      if (async) {\n        return Promise.reject(e);\n      }\n      if (callback) {\n        callback(e);\n        return;\n      }\n      throw e;\n    };\n  }\n  function parseMarkdown(lexer, parser) {\n    return function (src, opt, callback) {\n      if (typeof opt === 'function') {\n        callback = opt;\n        opt = null;\n      }\n      var origOpt = _extends({}, opt);\n      opt = _extends({}, marked.defaults, origOpt);\n      var throwError = onError(opt.silent, opt.async, callback);\n\n      // throw error in case of non string input\n      if (typeof src === 'undefined' || src === null) {\n        return throwError(new Error('marked(): input parameter is undefined or null'));\n      }\n      if (typeof src !== 'string') {\n        return throwError(new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected'));\n      }\n      checkSanitizeDeprecation(opt);\n      if (opt.hooks) {\n        opt.hooks.options = opt;\n      }\n      if (callback) {\n        var highlight = opt.highlight;\n        var tokens;\n        try {\n          if (opt.hooks) {\n            src = opt.hooks.preprocess(src);\n          }\n          tokens = lexer(src, opt);\n        } catch (e) {\n          return throwError(e);\n        }\n        var done = function done(err) {\n          var out;\n          if (!err) {\n            try {\n              if (opt.walkTokens) {\n                marked.walkTokens(tokens, opt.walkTokens);\n              }\n              out = parser(tokens, opt);\n              if (opt.hooks) {\n                out = opt.hooks.postprocess(out);\n              }\n            } catch (e) {\n              err = e;\n            }\n          }\n          opt.highlight = highlight;\n          return err ? throwError(err) : callback(null, out);\n        };\n        if (!highlight || highlight.length < 3) {\n          return done();\n        }\n        delete opt.highlight;\n        if (!tokens.length) return done();\n        var pending = 0;\n        marked.walkTokens(tokens, function (token) {\n          if (token.type === 'code') {\n            pending++;\n            setTimeout(function () {\n              highlight(token.text, token.lang, function (err, code) {\n                if (err) {\n                  return done(err);\n                }\n                if (code != null && code !== token.text) {\n                  token.text = code;\n                  token.escaped = true;\n                }\n                pending--;\n                if (pending === 0) {\n                  done();\n                }\n              });\n            }, 0);\n          }\n        });\n        if (pending === 0) {\n          done();\n        }\n        return;\n      }\n      if (opt.async) {\n        return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src).then(function (src) {\n          return lexer(src, opt);\n        }).then(function (tokens) {\n          return opt.walkTokens ? Promise.all(marked.walkTokens(tokens, opt.walkTokens)).then(function () {\n            return tokens;\n          }) : tokens;\n        }).then(function (tokens) {\n          return parser(tokens, opt);\n        }).then(function (html) {\n          return opt.hooks ? opt.hooks.postprocess(html) : html;\n        })[\"catch\"](throwError);\n      }\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src);\n        }\n        var _tokens = lexer(src, opt);\n        if (opt.walkTokens) {\n          marked.walkTokens(_tokens, opt.walkTokens);\n        }\n        var html = parser(_tokens, opt);\n        if (opt.hooks) {\n          html = opt.hooks.postprocess(html);\n        }\n        return html;\n      } catch (e) {\n        return throwError(e);\n      }\n    };\n  }\n\n  /**\n   * Marked\n   */\n  function marked(src, opt, callback) {\n    return parseMarkdown(Lexer.lex, Parser.parse)(src, opt, callback);\n  }\n\n  /**\n   * Options\n   */\n\n  marked.options = marked.setOptions = function (opt) {\n    marked.defaults = _extends({}, marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n  marked.getDefaults = getDefaults;\n  marked.defaults = exports.defaults;\n\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    args.forEach(function (pack) {\n      // copy options to new object\n      var opts = _extends({}, pack);\n\n      // set async to true if it was set to true before\n      opts.async = marked.defaults.async || opts.async || false;\n\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers[ext.name];\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n                var ret = ext.renderer.apply(this, args);\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n        opts.extensions = extensions;\n      }\n\n      // ==-- Parse \"overwrite\" extensions --== //\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop];\n            // Replace renderer with func to run extension, but fall back if false\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n              var ret = pack.renderer[prop].apply(renderer, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n              return ret;\n            };\n          };\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n          opts.renderer = renderer;\n        })();\n      }\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop];\n            // Replace tokenizer with func to run extension, but fall back if false\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n              return ret;\n            };\n          };\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n          opts.tokenizer = tokenizer;\n        })();\n      }\n\n      // ==-- Parse Hooks extensions --== //\n      if (pack.hooks) {\n        (function () {\n          var hooks = marked.defaults.hooks || new Hooks();\n          var _loop3 = function _loop3(prop) {\n            var prevHook = hooks[prop];\n            if (Hooks.passThroughHooks.has(prop)) {\n              hooks[prop] = function (arg) {\n                if (marked.defaults.async) {\n                  return Promise.resolve(pack.hooks[prop].call(hooks, arg)).then(function (ret) {\n                    return prevHook.call(hooks, ret);\n                  });\n                }\n                var ret = pack.hooks[prop].call(hooks, arg);\n                return prevHook.call(hooks, ret);\n              };\n            } else {\n              hooks[prop] = function () {\n                for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n                  args[_key5] = arguments[_key5];\n                }\n                var ret = pack.hooks[prop].apply(hooks, args);\n                if (ret === false) {\n                  ret = prevHook.apply(hooks, args);\n                }\n                return ret;\n              };\n            }\n          };\n          for (var prop in pack.hooks) {\n            _loop3(prop);\n          }\n          opts.hooks = hooks;\n        })();\n      }\n\n      // ==-- Parse WalkTokens extensions --== //\n      if (pack.walkTokens) {\n        var _walkTokens = marked.defaults.walkTokens;\n        opts.walkTokens = function (token) {\n          var values = [];\n          values.push(pack.walkTokens.call(this, token));\n          if (_walkTokens) {\n            values = values.concat(_walkTokens.call(this, token));\n          }\n          return values;\n        };\n      }\n      marked.setOptions(opts);\n    });\n  };\n\n  /**\n   * Run callback for every token\n   */\n\n  marked.walkTokens = function (tokens, callback) {\n    var values = [];\n    var _loop4 = function _loop4() {\n      var token = _step.value;\n      values = values.concat(callback.call(marked, token));\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              values = values.concat(marked.walkTokens(cell.tokens, callback));\n            }\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                values = values.concat(marked.walkTokens(_cell.tokens, callback));\n              }\n            }\n            break;\n          }\n        case 'list':\n          {\n            values = values.concat(marked.walkTokens(token.items, callback));\n            break;\n          }\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                values = values.concat(marked.walkTokens(token[childTokens], callback));\n              });\n            } else if (token.tokens) {\n              values = values.concat(marked.walkTokens(token.tokens, callback));\n            }\n          }\n      }\n    };\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop4();\n    }\n    return values;\n  };\n\n  /**\n   * Parse Inline\n   * @param {string} src\n   */\n  marked.parseInline = parseMarkdown(Lexer.lexInline, Parser.parseInline);\n\n  /**\n   * Expose\n   */\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.Hooks = Hooks;\n  marked.parse = marked;\n  var options = marked.options;\n  var setOptions = marked.setOptions;\n  var use = marked.use;\n  var walkTokens = marked.walkTokens;\n  var parseInline = marked.parseInline;\n  var parse = marked;\n  var parser = Parser.parse;\n  var lexer = Lexer.lex;\n\n  exports.Hooks = Hooks;\n  exports.Lexer = Lexer;\n  exports.Parser = Parser;\n  exports.Renderer = Renderer;\n  exports.Slugger = Slugger;\n  exports.TextRenderer = TextRenderer;\n  exports.Tokenizer = Tokenizer;\n  exports.getDefaults = getDefaults;\n  exports.lexer = lexer;\n  exports.marked = marked;\n  exports.options = options;\n  exports.parse = parse;\n  exports.parseInline = parseInline;\n  exports.parser = parser;\n  exports.setOptions = setOptions;\n  exports.use = use;\n  exports.walkTokens = walkTokens;\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}